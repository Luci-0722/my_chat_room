23-5-14前已解决BUG、
    group关键字在MYSQL查询中需要加引号（键盘左上角）
    已添加线程池
    留存bug：多线程访问mysql出现查询断开。 解决方案：数据库连接池


23-5-15
    添加数据库连接池成功
    存在bug：连接池剩余量一直增长 接受数据过多段错误，客户端退出(待解决)


23-5-16
构思重构项目为c++模式
redis可使用的方面：
会话管理（Session Management）：你可以使用 Redis 存储用户的会话信息，例如用户登录状态、会话令牌等。当用户登录时，将会话信息存储在 Redis 中，以便在多个服务器或服务之间共享会话状态。

在线用户列表（Online User List）：Redis 的有序集合（Sorted Set）数据结构非常适合存储和维护在线用户列表。你可以将每个用户表示为有序集合的成员，并使用时间戳作为分数，以便根据用户最后活动时间进行排序。

消息发布与订阅（Publish/Subscribe）：Redis 的发布与订阅功能可以用于实现聊天室的实时消息传递。当用户发送消息时，消息可以被发布到 Redis 的频道中，然后所有订阅该频道的用户都可以接收到消息。

缓存（Caching）：在需要频繁读取的数据或计算结果上使用 Redis 缓存，可以提高系统的响应速度和性能。例如，可以将热门聊天室的消息或用户数据存储在 Redis 中，以避免每次都从 MySQL 数据库中查询。

计数器和限流（Counters and Rate Limiting）：使用 Redis 的计数器功能可以方便地实现一些统计功能，例如在线用户数、消息数量等。此外，Redis 的令牌桶算法可以用于限制用户的请求速率，防止滥用和过载。

排行榜和统计（Leaderboards and Statistics）：如果你的聊天室项目需要实时排行榜或统计信息，Redis 的有序集合和哈希表可以派上用场。你可以将用户的积分或其他指标存储在 Redis 中，并使用 Redis 提供的命令进行排名和查询。


分布式系统可使用的方面：
您可以使用分布式架构来部署您的聊天室应用程序。例如，您可以将应用程序分成多个服务，每个服务负责处理特定的功能，然后将这些服务部署到多台服务器上。这样，当您的应用程序需要扩展时，您可以通过增加服务器数量来实现水平扩展。

您可以使用分布式消息队列来处理用户之间的消息传递。例如，您可以使用 Apache Kafka 或 RabbitMQ 等消息队列中间件来实现消息的异步传递和存储。这样，即使某个服务器出现故障，用户之间的消息也不会丢失。

您可以使用分布式数据库来存储用户信息和聊天记录。例如，您可以使用 Apache Cassandra 或 Amazon DynamoDB 等分布式数据库来存储数据。这样，即使某个数据库节点出现故障，您的应用程序仍然可以正常运行。

您可以使用分布式缓存来提高应用程序的性能。例如，您可以使用 Redis 集群来存储那些需要快速访问和更新的数据。这样，即使某个缓存节点出现故障，您的应用程序仍然可以正常运行。

总之，在您的聊天室项目中，您可以使用分布式架构、分布式消息队列、分布式数据库和分布式缓存等技术来提高应用程序的可扩展性、可靠性和容错性。具体如何实现取决于您的应用程序的需求和架构设计

23-5-24
聊天室类构建成功
还需整合一些类
存在bug：连接池剩余量一直增长
存在bug: 好友状态不正确
